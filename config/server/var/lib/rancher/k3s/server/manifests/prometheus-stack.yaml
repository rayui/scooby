apiVersion: v1
kind: Namespace
metadata:
  name: prom-stack
  labels:
    name: monitoring
---
apiVersion: helm.cattle.io/v1
kind: HelmChart
metadata:
  name: prom-stack
  namespace: prom-stack
spec:
  chart: kube-prometheus-stack
  targetNamespace: prom-stack
  repo: https://prometheus-community.github.io/helm-charts
  valuesContent: |-
    # k3s uses sqllite, so we cannot monitor etcd in the same way
    defaultRules:
      rules:
        etcd: false
        alertmanager: false

    kubeEtcd:
      enabled: false

    # matched to service port 'prom-stack-kube-prometheus-kube-controller-manager' -n kube-system
    kubeControllerManager:
      enabled: true
      endpoints: ['192.168.64.1']
      service:
        enabled: true
        port: 10252
        targetPort: 10252
      serviceMonitor:
        enabled: true
        https: false

    # matched to service port 'prom-stack-kube-prometheus-kube-scheduler' -n kube-system
    kubeScheduler:
      enabled: true
      endpoints: ['192.168.64.1']
      service:
        enabled: true
        port: 10251
        targetPort: 10251
      serviceMonitor:
        enabled: true
        https: false

    # matched to service port 'prom-stack-kube-prometheus-kube-proxy' -n kube-system
    kubeProxy:
      enabled: true
      endpoints: ['192.168.64.1']
      service:
        enabled: true
        port: 10249
        targetPort: 10249

    alertmanager:
      enabled: false

    grafana:
      # username is 'admin'
      adminPassword: grafana
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts: ['grafana.buffy']
        path: "/"
        tls:
        - secretName: tls-credential
          hosts:
          - grafana.buffy
      nodeSelector:
        kubernetes.io/hostname: willow

    prometheusOperator:
      nodeSelector:
        kubernetes.io/hostname: willow
      admissionWebhooks:
        patch:
          nodeSelector:
            kubernetes.io/hostname: willow

    kube-state-metrics:
      nodeSelector:
        kubernetes.io/hostname: willow

    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
        hosts: ['prometheus.buffy']
        paths: ['/']

      nodeSelector:
        kubernetes.io/hostname: willow

      prometheusSpec:
        externalUrl: "https://prometheus.buffy/"
        routePrefix: /

        # do not require new PrometheusRule to have all the helm labels in order to match
        ruleSelectorNilUsesHelmValues: false

        # additional scrape job
        additionalScrapeConfigs:
          - job_name: kubernetes-pod-endpoints
            kubernetes_sd_configs:
            - {role: pod}
            relabel_configs:
            - action: keep
              regex: true
              source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            - action: keep
              regex: true
              source_labels: [__meta_kubernetes_pod_annotationpresent_prometheus_io_port]
            - action: drop
              regex: (kube-system|prom)
              source_labels: [__meta_kubernetes_namespace]
            - action: replace
              regex: (https?)
              source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scheme]
              target_label: __scheme__
            - action: replace
              regex: (.+)
              source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              target_label: __metrics_path__
            - action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              target_label: __address__
            - {action: labelmap, regex: __meta_kubernetes_pod_label_(.+)}
            - action: replace
              source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - action: replace
              source_labels: [__meta_kubernetes_service_name]
              target_label: kubernetes_name
          - job_name: kubernetes-service-endpoints
            kubernetes_sd_configs:
            - {role: service}
            relabel_configs:
            - action: keep
              regex: true
              source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            - action: drop
              regex: (kube-system|prom)
              source_labels: [__meta_kubernetes_namespace]
            - action: keep
              regex: .*metrics
              source_labels: [__meta_kubernetes_service_port_name]
            - action: replace
              regex: (https?)
              source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              target_label: __scheme__
            - action: replace
              regex: (.+)
              source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              target_label: __metrics_path__
            - action: replace
              regex: ([^:]+)(?::\d+)?;(\d+)
              replacement: $1:$2
              source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              target_label: __address__
            - {action: labelmap, regex: __meta_kubernetes_service_label_(.+)}
            - action: replace
              source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - action: replace
              source_labels: [__meta_kubernetes_service_name]
              target_label: kubernetes_name


        # external labels will be common for all alerts and available for templating in AlertManager
        externalLabels: {'cluster': 'k3s', 'env': 'dev', 'jumpbox': 'localhost.local'}

        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: local-path
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 5Gi
